#pragma once

namespace L_Atlas {

	struct KeyboardInput {
		bool aPressed;
		bool bPressed;
		bool cPressed;
		bool dPressed;
		bool ePressed;
		bool fPressed;
		bool gPressed;
		bool hPressed;
		bool iPressed;
		bool jPressed;
		bool kPressed;
		bool lPressed;
		bool mPressed;
		bool nPressed;
		bool oPressed;
		bool pPressed;
		bool qPressed;
		bool rPressed;
		bool sPressed;
		bool tPressed;
		bool uPressed;
		bool vPressed;
		bool wPressed;
		bool xPressed;
		bool yPressed;
		bool zPressed;
		bool leftControlPressed;
		bool leftShiftPressed;
		bool capsLockPressed;
		bool leftAltPressed;
		bool tabPressed;
		bool tildePressed;
		bool zeroPressed;
		bool onePressed;
		bool twoPressed;
		bool threePressed;
		bool fourPressed;
		bool fivePressed;
		bool sixPressed;
		bool sevenPressed;
		bool eightPressed;
		bool ninePressed;
		bool minusPressed;
		bool equalPressed;
		bool backspacePressed;
		bool leftBracketPressed;
		bool rightBracketPressed;
		bool backslashPressed;
		bool frontslashPressed;
		bool commaPressed;
		bool periodPressed;
		bool semiColonPressed;
		bool apostrophePressed;
		bool enterPressed;
		bool deletePressed;
		bool rightShiftPressed;
		bool rightControlPressed;
		bool rightAltPressed;
		bool leftPressed;
		bool rightPressed;
		bool upPressed;
		bool downPressed;
		bool escapePressed;
		bool spacePressed;

		bool aHeld;
		bool bHeld;
		bool cHeld;
		bool dHeld;
		bool eHeld;
		bool fHeld;
		bool gHeld;
		bool hHeld;
		bool iHeld;
		bool jHeld;
		bool kHeld;
		bool lHeld;
		bool mHeld;
		bool nHeld;
		bool oHeld;
		bool pHeld;
		bool qHeld;
		bool rHeld;
		bool sHeld;
		bool tHeld;
		bool uHeld;
		bool vHeld;
		bool wHeld;
		bool xHeld;
		bool yHeld;
		bool zHeld;
		bool leftControlHeld;
		bool leftShiftHeld;
		bool capsLockHeld;
		bool leftAltHeld;
		bool tabHeld;
		bool tildeHeld;
		bool zeroHeld;
		bool oneHeld;
		bool twoHeld;
		bool threeHeld;
		bool fourHeld;
		bool fiveHeld;
		bool sixHeld;
		bool sevenHeld;
		bool eightHeld;
		bool nineHeld;
		bool minusHeld;
		bool equalHeld;
		bool backspaceHeld;
		bool leftBracketHeld;
		bool rightBracketHeld;
		bool backslashHeld;
		bool frontslashHeld;
		bool commaHeld;
		bool periodHeld;
		bool semiColonHeld;
		bool apostropheHeld;
		bool enterHeld;
		bool deleteHeld;
		bool rightShiftHeld;
		bool rightControlHeld;
		bool rightAltHeld;
		bool leftHeld;
		bool rightHeld;
		bool upHeld;
		bool downHeld;
		bool escapeHeld;
		bool spaceHeld;

		bool aReleased;
		bool bReleased;
		bool cReleased;
		bool dReleased;
		bool eReleased;
		bool fReleased;
		bool gReleased;
		bool hReleased;
		bool iReleased;
		bool jReleased;
		bool kReleased;
		bool lReleased;
		bool mReleased;
		bool nReleased;
		bool oReleased;
		bool pReleased;
		bool qReleased;
		bool rReleased;
		bool sReleased;
		bool tReleased;
		bool uReleased;
		bool vReleased;
		bool wReleased;
		bool xReleased;
		bool yReleased;
		bool zReleased;
		bool leftControlReleased;
		bool leftShiftReleased;
		bool capsLockReleased;
		bool leftAltReleased;
		bool tabReleased;
		bool tildeReleased;
		bool zeroReleased;
		bool oneReleased;
		bool twoReleased;
		bool threeReleased;
		bool fourReleased;
		bool fiveReleased;
		bool sixReleased;
		bool sevenReleased;
		bool eightReleased;
		bool nineReleased;
		bool minusReleased;
		bool equalReleased;
		bool backspaceReleased;
		bool leftBracketReleased;
		bool rightBracketReleased;
		bool backslashReleased;
		bool frontslashReleased;
		bool commaReleased;
		bool periodReleased;
		bool semiColonReleased;
		bool apostropheReleased;
		bool enterReleased;
		bool deleteReleased;
		bool rightShiftReleased;
		bool rightControlReleased;
		bool rightAltReleased;
		bool leftReleased;
		bool rightReleased;
		bool upReleased;
		bool downReleased;
		bool escapeReleased;
		bool spaceReleased;

		KeyboardInput() {
			aPressed = false;
			bPressed = false;
			cPressed = false;
			dPressed = false;
			ePressed = false;
			fPressed = false;
			gPressed = false;
			hPressed = false;
			iPressed = false;
			jPressed = false;
			kPressed = false;
			lPressed = false;
			mPressed = false;
			nPressed = false;
			oPressed = false;
			pPressed = false;
			qPressed = false;
			rPressed = false;
			sPressed = false;
			tPressed = false;
			uPressed = false;
			vPressed = false;
			wPressed = false;
			xPressed = false;
			yPressed = false;
			zPressed = false;
			leftControlPressed = false;
			leftShiftPressed = false;
			capsLockPressed = false;
			leftAltPressed = false;
			tabPressed = false;
			tildePressed = false;
			zeroPressed = false;
			onePressed = false;
			twoPressed = false;
			threePressed = false;
			fourPressed = false;
			fivePressed = false;
			sixPressed = false;
			sevenPressed = false;
			eightPressed = false;
			ninePressed = false;
			minusPressed = false;
			equalPressed = false;
			backspacePressed = false;
			leftBracketPressed = false;
			rightBracketPressed = false;
			backslashPressed = false;
			frontslashPressed = false;
			commaPressed = false;
			periodPressed = false;
			semiColonPressed = false;
			apostrophePressed = false;
			enterPressed = false;
			deletePressed = false;
			rightShiftPressed = false;
			rightControlPressed = false;
			rightAltPressed = false;
			leftPressed = false;
			rightPressed = false;
			upPressed = false;
			downPressed = false;
			escapePressed = false;
			spacePressed = false;

			aHeld = false;
			bHeld = false;
			cHeld = false;
			dHeld = false;
			eHeld = false;
			fHeld = false;
			gHeld = false;
			hHeld = false;
			iHeld = false;
			jHeld = false;
			kHeld = false;
			lHeld = false;
			mHeld = false;
			nHeld = false;
			oHeld = false;
			pHeld = false;
			qHeld = false;
			rHeld = false;
			sHeld = false;
			tHeld = false;
			uHeld = false;
			vHeld = false;
			wHeld = false;
			xHeld = false;
			yHeld = false;
			zHeld = false;
			leftControlHeld = false;
			leftShiftHeld = false;
			capsLockHeld = false;
			leftAltHeld = false;
			tabHeld = false;
			tildeHeld = false;
			zeroHeld = false;
			oneHeld = false;
			twoHeld = false;
			threeHeld = false;
			fourHeld = false;
			fiveHeld = false;
			sixHeld = false;
			sevenHeld = false;
			eightHeld = false;
			nineHeld = false;
			minusHeld = false;
			equalHeld = false;
			backspaceHeld = false;
			leftBracketHeld = false;
			rightBracketHeld = false;
			backslashHeld = false;
			frontslashHeld = false;
			commaHeld = false;
			periodHeld = false;
			semiColonHeld = false;
			apostropheHeld = false;
			enterHeld = false;
			deleteHeld = false;
			rightShiftHeld = false;
			rightControlHeld = false;
			rightAltHeld = false;
			leftHeld = false;
			rightHeld = false;
			upHeld = false;
			downHeld = false;
			escapeHeld = false;
			spaceHeld = false;

			aReleased = false;
			bReleased = false;
			cReleased = false;
			dReleased = false;
			eReleased = false;
			fReleased = false;
			gReleased = false;
			hReleased = false;
			iReleased = false;
			jReleased = false;
			kReleased = false;
			lReleased = false;
			mReleased = false;
			nReleased = false;
			oReleased = false;
			pReleased = false;
			qReleased = false;
			rReleased = false;
			sReleased = false;
			tReleased = false;
			uReleased = false;
			vReleased = false;
			wReleased = false;
			xReleased = false;
			yReleased = false;
			zReleased = false;
			leftControlReleased = false;
			leftShiftReleased = false;
			capsLockReleased = false;
			leftAltReleased = false;
			tabReleased = false;
			tildeReleased = false;
			zeroReleased = false;
			oneReleased = false;
			twoReleased = false;
			threeReleased = false;
			fourReleased = false;
			fiveReleased = false;
			sixReleased = false;
			sevenReleased = false;
			eightReleased = false;
			nineReleased = false;
			minusReleased = false;
			equalReleased = false;
			backspaceReleased = false;
			leftBracketReleased = false;
			rightBracketReleased = false;
			backslashReleased = false;
			frontslashReleased = false;
			commaReleased = false;
			periodReleased = false;
			semiColonReleased = false;
			apostropheReleased = false;
			enterReleased = false;
			deleteReleased = false;
			rightShiftReleased = false;
			rightControlReleased = false;
			rightAltReleased = false;
			leftReleased = false;
			rightReleased = false;
			upReleased = false;
			downReleased = false;
			escapeReleased = false;
			spaceReleased = false;
		}
	};

	struct MouseInput {
		bool leftClicked;
		bool leftHeld;
		bool leftReleased;

		bool rightClicked;
		bool rightHeld;
		bool rightReleased;

		bool middleClicked;
		bool middleHeld;
		bool middleReleased;

		bool mb4Clicked;
		bool mb4Held;
		bool mb4Released;

		double mouseXPos;
		double mouseYPos;

		MouseInput() {
			leftClicked = false;
			leftHeld = false;
			leftReleased = false;

			rightClicked = false;
			rightHeld = false;
			rightReleased = false;

			middleClicked = false;
			middleHeld = false;
			middleReleased = false;

			mb4Clicked = false;
			mb4Held = false;
			mb4Released = false;

			mouseXPos = 0.0;
			mouseYPos = 0.0;
		}
	};
}